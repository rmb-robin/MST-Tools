package com.mst.util;

import java.net.UnknownHostException;
import java.util.Calendar;
import java.util.HashMap;
import java.util.Map;
import java.util.regex.Pattern;

import redis.clients.jedis.Jedis;
import redis.clients.jedis.JedisPool;
import redis.clients.jedis.JedisPoolConfig;

import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.MongoClient;

public class Constants {
	
	public static Map<String, String> semanticTypes = new HashMap<String, String>();
	
	static {		
		semanticTypes.put("[age]","age");
		semanticTypes.put("[number]","number");
		semanticTypes.put("[proper noun]","propn");
		semanticTypes.put("[date]","date");
/*		semanticTypes.put("added","""avb-added");
		semanticTypes.put("administered",""avb-administered");
		semanticTypes.put("began",""avb-began");
		semanticTypes.put("begun",""avb-began");
		semanticTypes.put("biopsied",""avb-biopsied");
		semanticTypes.put("cancelled",""avb-cancelled");
		semanticTypes.put("chose",""avb-chose");
		semanticTypes.put("decided",""avb-chose");
		semanticTypes.put("selected",""avb-chose");
		semanticTypes.put("complains",""avb-complains");
		semanticTypes.put("considered",""avb-considered");
		semanticTypes.put("continued",""avb-continued");
		semanticTypes.put("continues",""avb-continues");
		semanticTypes.put("remains",""avb-continues");
		semanticTypes.put("declined",""avb-decrease");
		semanticTypes.put("decreased",""avb-decrease");
		semanticTypes.put("dropped",""avb-decrease");
		semanticTypes.put("delayed",""avb-delay");
		semanticTypes.put("postponed",""avb-delay");
		semanticTypes.put("denies",""avb-denies");
		semanticTypes.put("discussed",""avb-discussed");
		semanticTypes.put("evaluated",""avb-discussed");
		semanticTypes.put("elected",""avb-elected");
		semanticTypes.put("enrolled",""avb-enrolled");
		semanticTypes.put("completed",""avb-finish");
		semanticTypes.put("completes",""avb-finish");
		semanticTypes.put("finished",""avb-finish");
		semanticTypes.put("given",""avb-given");
		semanticTypes.put("changed",""avb-increase");
		semanticTypes.put("increased",""avb-increase");
		semanticTypes.put("jumped",""avb-increase");
		semanticTypes.put("rose",""avb-increase");
		semanticTypes.put("obtained",""avb-obtained");
		semanticTypes.put("presents",""avb-presnt");
		semanticTypes.put("refused",""avb-refused");
		semanticTypes.put("remained",""avb-remained");
		semanticTypes.put("returns",""avb-returns");
		semanticTypes.put("scheduled",""avb-scheduled");
		semanticTypes.put("revealed",""avb-show");
		semanticTypes.put("showed",""avb-show");
		semanticTypes.put("suggests",""avb-show");
		semanticTypes.put("signed",""avb-signed");
		semanticTypes.put("re-started",""avb-start");
		semanticTypes.put("received",""avb-start");
		semanticTypes.put("restarted",""avb-start");
		semanticTypes.put("resume",""avb-start");
		semanticTypes.put("resumed",""avb-start");
		semanticTypes.put("start",""avb-start");
		semanticTypes.put("started",""avb-start");
		semanticTypes.put("stopped",""avb-stop");
		semanticTypes.put("discontinued",""avb-stopped");
		semanticTypes.put("failed",""avb-stopped");
		semanticTypes.put("failing",""avb-stopped");
		semanticTypes.put("terminated",""avb-stopped");
		semanticTypes.put("recommend",""avb-suggest");
		semanticTypes.put("recommended",""avb-suggest");
		semanticTypes.put("suggest",""avb-suggest");
		semanticTypes.put("takes",""avb-takes");
		semanticTypes.put("tolerated",""avb-tolerated");
		semanticTypes.put("treated",""avb-treated");
		semanticTypes.put("underwent",""avb-undwen");*/
/*		semanticTypes.put("was",""bevbpa");
		semanticTypes.put("was failing",""bevbpa-failing");
		semanticTypes.put("am",""bevbpr");
		semanticTypes.put("are",""bevbpr");
		semanticTypes.put("be",""bevbpr");
		semanticTypes.put("been",""bevbpr");
		semanticTypes.put("being",""bevbpr");
		semanticTypes.put("had",""bevbpr");
		semanticTypes.put("has",""bevbpr");
		semanticTypes.put("has been",""bevbpr");
		semanticTypes.put("have",""bevbpr");
		semanticTypes.put("is",""bevbpr");
		semanticTypes.put("is having",""bevbpr");
		semanticTypes.put("has been approved",""bevbpr-approved");
		semanticTypes.put("have been approved",""bevbpr-approved");
		semanticTypes.put("is approved",""bevbpr-approved");
		semanticTypes.put("has chosen",""bevbpr-chosen");
		semanticTypes.put("has decided",""bevbpr-chosen");
		semanticTypes.put("is considering",""bevbpr-consider");
		semanticTypes.put("am receiving",""bevbpr-continue");
		semanticTypes.put("has been continuing",""bevbpr-continue");
		semanticTypes.put("has continued",""bevbpr-continue");
		semanticTypes.put("have been given",""bevbpr-continue");
		semanticTypes.put("have been resumed",""bevbpr-continue");
		semanticTypes.put("have been treated",""bevbpr-continue");
		semanticTypes.put("have continued",""bevbpr-continue");
		semanticTypes.put("have remained",""bevbpr-continue");
		semanticTypes.put("have restarted",""bevbpr-continue");
		semanticTypes.put("have resumed",""bevbpr-continue");
		semanticTypes.put("is continued",""bevbpr-continue");
		semanticTypes.put("is continuing",""bevbpr-continue");
		semanticTypes.put("is receiving",""bevbpr-continue");
		semanticTypes.put("is taking",""bevbpr-continue");
		semanticTypes.put("is undergoing",""bevbpr-continue");
		semanticTypes.put("is using",""bevbpr-continue");
		semanticTypes.put("am recommending",""bevbpr-discussed");
		semanticTypes.put("has been discussed",""bevbpr-discussed");
		semanticTypes.put("has been evaluated",""bevbpr-discussed");
		semanticTypes.put("has been recommending",""bevbpr-discussed");
		semanticTypes.put("has considered",""bevbpr-discussed");
		semanticTypes.put("has contemplated",""bevbpr-discussed");
		semanticTypes.put("has discussed",""bevbpr-discussed");
		semanticTypes.put("has evaluated",""bevbpr-discussed");
		semanticTypes.put("has recommended",""bevbpr-discussed");
		semanticTypes.put("have considered",""bevbpr-discussed");
		semanticTypes.put("have discussed",""bevbpr-discussed");
		semanticTypes.put("have recommended",""bevbpr-discussed");
		semanticTypes.put("is contemplating",""bevbpr-discussed");
		semanticTypes.put("is recommending",""bevbpr-discussed");
		semanticTypes.put("is doing",""bevbpr-do");
		semanticTypes.put("has failed",""bevbpr-failed");
		semanticTypes.put("have failed",""bevbpr-failed");
		semanticTypes.put("is failing",""bevbpr-failed");
		semanticTypes.put("is going",""bevbpr-going");
		semanticTypes.put("has refused",""bevbpr-refused");
		semanticTypes.put("is refusing",""bevbpr-refused");
		semanticTypes.put("is seen",""bevbpr-seen");
		semanticTypes.put("am restarting",""bevbpr-started");
		semanticTypes.put("has administered",""bevbpr-started");
		semanticTypes.put("has been beginning",""bevbpr-started");
		semanticTypes.put("has been given",""bevbpr-started");
		semanticTypes.put("has been receiving",""bevbpr-started");
		semanticTypes.put("has been restarted",""bevbpr-started");
		semanticTypes.put("has been restarting",""bevbpr-started");
		semanticTypes.put("has been starting",""bevbpr-started");
		semanticTypes.put("has been taking",""bevbpr-started");
		semanticTypes.put("has been treated",""bevbpr-started");
		semanticTypes.put("has been undergoing",""bevbpr-started");
		semanticTypes.put("has been using",""bevbpr-started");
		semanticTypes.put("has begun",""bevbpr-started");
		semanticTypes.put("has remained",""bevbpr-started");
		semanticTypes.put("has restarted",""bevbpr-started");
		semanticTypes.put("has returned",""bevbpr-started");
		semanticTypes.put("has undergone",""bevbpr-started");
		semanticTypes.put("have given",""bevbpr-started");
		semanticTypes.put("have started",""bevbpr-started");
		semanticTypes.put("is beginning",""bevbpr-started");
		semanticTypes.put("is being treated",""bevbpr-started");
		semanticTypes.put("is given",""bevbpr-started");
		semanticTypes.put("is restarting",""bevbpr-started");
		semanticTypes.put("is starting",""bevbpr-started");
		semanticTypes.put("has been finishing",""bevbpr-stopping");
		semanticTypes.put("has been stopping",""bevbpr-stopping");
		semanticTypes.put("has been terminated",""bevbpr-stopping");
		semanticTypes.put("has discontinued",""bevbpr-stopping");
		semanticTypes.put("have discontinued",""bevbpr-stopping");
		semanticTypes.put("have terminated",""bevbpr-stopping");
		semanticTypes.put("is discontinued",""bevbpr-stopping");
		semanticTypes.put("is finishing",""bevbpr-stopping");
		semanticTypes.put("is stopping",""bevbpr-stopping");
		semanticTypes.put("is terminated",""bevbpr-stopping");
		semanticTypes.put("has been tolerating",""bevbpr-tolerate");
		semanticTypes.put("has been working",""bevbpr-tolerate");
		semanticTypes.put("has worked",""bevbpr-tolerate");
		semanticTypes.put("is responding",""bevbpr-tolerate");
		semanticTypes.put("is staying",""bevbpr-tolerate");
		semanticTypes.put("is tolerating",""bevbpr-tolerate");
		semanticTypes.put("is working",""bevbpr-tolerate");
		semanticTypes.put("has worsened",""bevbpr-worsened");
		semanticTypes.put("had been approved",""bevbpa-beenapproved");
		semanticTypes.put("was approved",""bevbpa-beenapproved");
		semanticTypes.put("had been failing",""bevbpa-beenfailing");
		semanticTypes.put("had chosen",""bevbpa-chosen");
		semanticTypes.put("had considered",""bevbpa-considered");
		semanticTypes.put("had contemplated",""bevbpa-considered");
		semanticTypes.put("had evaluated",""bevbpa-considered");
		semanticTypes.put("had continued",""bevbpa-continued");
		semanticTypes.put("had remained",""bevbpa-continued");
		semanticTypes.put("was continued",""bevbpa-continued");
		semanticTypes.put("was continuing",""bevbpa-continued");
		semanticTypes.put("was staying",""bevbpa-continued");
		semanticTypes.put("was taking",""bevbpa-continued");
		semanticTypes.put("was undergoing",""bevbpa-continued");
		semanticTypes.put("was using",""bevbpa-continued");
		semanticTypes.put("had decided",""bevbpa-decided");
		semanticTypes.put("had been recommending",""bevbpa-discussed");
		semanticTypes.put("had discussed",""bevbpa-discussed");
		semanticTypes.put("was considered",""bevbpa-discussed");
		semanticTypes.put("was discussed",""bevbpa-discussed");
		semanticTypes.put("was evaluated",""bevbpa-discussed");
		semanticTypes.put("was recommended",""bevbpa-discussed");
		semanticTypes.put("was recommending",""bevbpa-discussed");
		semanticTypes.put("were discussed",""bevbpa-discussed");
		semanticTypes.put("were evaluated",""bevbpa-discussed");
		semanticTypes.put("were recommending",""bevbpa-discussed");
		semanticTypes.put("had refused",""bevbpa-refused");
		semanticTypes.put("had returned",""bevbpa-returned");
		semanticTypes.put("had been restarted",""bevbpa-started");
		semanticTypes.put("had been treated",""bevbpa-started");
		semanticTypes.put("had begun",""bevbpa-started");
		semanticTypes.put("had given",""bevbpa-started");
		semanticTypes.put("had restarted",""bevbpa-started");
		semanticTypes.put("had resumed",""bevbpa-started");
		semanticTypes.put("had started",""bevbpa-started");
		semanticTypes.put("was administered",""bevbpa-started");
		semanticTypes.put("was beginning",""bevbpa-started");
		semanticTypes.put("was begun",""bevbpa-started");
		semanticTypes.put("was given",""bevbpa-started");
		semanticTypes.put("was receiving",""bevbpa-started");
		semanticTypes.put("was restarted",""bevbpa-started");
		semanticTypes.put("was restarting",""bevbpa-started");
		semanticTypes.put("was resumed",""bevbpa-started");
		semanticTypes.put("was started",""bevbpa-started");
		semanticTypes.put("was starting",""bevbpa-started");
		semanticTypes.put("had discontinued",""bevbpa-stopped");
		semanticTypes.put("had failed",""bevbpa-stopped");
		semanticTypes.put("had terminated",""bevbpa-stopped");
		semanticTypes.put("was discontinued",""bevbpa-stopped");
		semanticTypes.put("was finishing",""bevbpa-stopped");
		semanticTypes.put("was stopping",""bevbpa-stopped");
		semanticTypes.put("was terminated",""bevbpa-stopped");
		semanticTypes.put("was treated",""bevbpa-treated");
		semanticTypes.put("had worked",""bevbpa-worked");
		semanticTypes.put("was responding",""bevbpa-worked");
		semanticTypes.put("was tolerating",""bevbpa-worked");
		semanticTypes.put("was working",""bevbpa-worked");
		semanticTypes.put("had worsened",""bevbpa-worsened");*/
/*		semanticTypes.put("abdomen","bpoc");
		semanticTypes.put("abdomen/pelvis","bpoc");
		semanticTypes.put("abdominal","bpoc");
		semanticTypes.put("abdominal/pelvic","bpoc");
		semanticTypes.put("adrenal","bpoc");
		semanticTypes.put("back","bpoc");
		semanticTypes.put("bladder","bpoc");
		semanticTypes.put("bone","bpoc");
		semanticTypes.put("brain","bpoc");
		semanticTypes.put("breast","bpoc");
		semanticTypes.put("chest","bpoc");
		semanticTypes.put("colon","bpoc");
		semanticTypes.put("colon/rectal","bpoc");
		semanticTypes.put("colorectal","bpoc");
		semanticTypes.put("esophageal","bpoc");
		semanticTypes.put("extremities","bpoc");
		semanticTypes.put("flank","bpoc");
		semanticTypes.put("genital","bpoc");
		semanticTypes.put("groin","bpoc");
		semanticTypes.put("hepatic","bpoc");
		semanticTypes.put("kidney","bpoc");
		semanticTypes.put("liver","bpoc");
		semanticTypes.put("lungs","bpoc");
		semanticTypes.put("lymph node","bpoc");
		semanticTypes.put("lymph nodes","bpoc");
		semanticTypes.put("lymphatic","bpoc");
		semanticTypes.put("muscle","bpoc");
		semanticTypes.put("neck","bpoc");
		semanticTypes.put("node","bpoc");
		semanticTypes.put("oropharynx","bpoc");
		semanticTypes.put("ovarian","bpoc");
		semanticTypes.put("pelvic","bpoc");
		semanticTypes.put("pelvis","bpoc");
		semanticTypes.put("penile","bpoc");
		semanticTypes.put("pituitary","bpoc");
		semanticTypes.put("prostate","bpoc");
		semanticTypes.put("prostate gland","bpoc");
		semanticTypes.put("pulmonary","bpoc");
		semanticTypes.put("pupils","bpoc");
		semanticTypes.put("rectal","bpoc");
		semanticTypes.put("renal","bpoc");
		semanticTypes.put("scrotal","bpoc");
		semanticTypes.put("sinuses","bpoc");
		semanticTypes.put("skeletal","bpoc");
		semanticTypes.put("skin","bpoc");
		semanticTypes.put("spine","bpoc");
		semanticTypes.put("stomach","bpoc");
		semanticTypes.put("testes","bpoc");
		semanticTypes.put("testicle","bpoc");
		semanticTypes.put("testicular","bpoc");
		semanticTypes.put("testis","bpoc");
		semanticTypes.put("thoracic","bpoc");
		semanticTypes.put("throat","bpoc");
		semanticTypes.put("tongue","bpoc");
		semanticTypes.put("ureteral","bpoc");
		semanticTypes.put("urethral","bpoc");
		semanticTypes.put("visceral","bpoc");
		
		semanticTypes.put("better","diagre");
		semanticTypes.put("dull","diagre");
		semanticTypes.put("intermittant","diagre");
		semanticTypes.put("worse","diagre");
		semanticTypes.put("biopsies","diap");
		semanticTypes.put("biopsy","diap");
		semanticTypes.put("bone density scan","diap");
		semanticTypes.put("bone scan","diap");
		semanticTypes.put("bx","diap");
		semanticTypes.put("cbc","diap");
		semanticTypes.put("cell biopsy","diap");
		semanticTypes.put("chemistry panel","diap");
		semanticTypes.put("chest x-rays","diap");
		semanticTypes.put("complete blood count","diap");
		semanticTypes.put("core needle biopsy","diap");
		semanticTypes.put("ct","diap");
		semanticTypes.put("ct scan","diap");
		semanticTypes.put("cysto","diap");
		semanticTypes.put("cystogram","diap");
		semanticTypes.put("cystourethroscopy","diap");
		semanticTypes.put("dexa","diap");
		semanticTypes.put("dexa scan","diap");
		semanticTypes.put("endoscopic biopsy","diap");
		semanticTypes.put("external beam radiation","diap");
		semanticTypes.put("external beam radiation therapy","diap");
		semanticTypes.put("fdg pet","diap");
		semanticTypes.put("fluorodeoxyglucose pet","diap");
		semanticTypes.put("full blood count","diap");
		semanticTypes.put("gleason score","diap");
		semanticTypes.put("glucose level","diap");
		semanticTypes.put("hct","diap");
		semanticTypes.put("hemoglobin","diap");
		semanticTypes.put("imaging","diap");
		semanticTypes.put("karnofsky score","diap");
		semanticTypes.put("mammogram","diap");
		semanticTypes.put("mammograms","diap");
		semanticTypes.put("metabolic profile","diap");
		semanticTypes.put("molecular breast imaging","diap");
		semanticTypes.put("mri","diap");
		semanticTypes.put("needle biopsy","diap");
		semanticTypes.put("node biopsy","diap");
		semanticTypes.put("path","diap");
		semanticTypes.put("pathology","diap");
		semanticTypes.put("pet","diap");
		semanticTypes.put("pet scans","diap");
		semanticTypes.put("pet/ct","diap");
		semanticTypes.put("prostascint","diap");
		semanticTypes.put("prostate biopsy","diap");
		semanticTypes.put("psa","diap");
		semanticTypes.put("punch biopsy","diap");
		semanticTypes.put("pvp","diap");
		semanticTypes.put("sonogram","diap");
		semanticTypes.put("testosterone","diap");
		semanticTypes.put("transrectal ultrasound","diap");
		semanticTypes.put("trus bx","diap");
		semanticTypes.put("whole body bone scan","diap");
		semanticTypes.put("x ray","diap");
		semanticTypes.put("x-ray","diap");
		semanticTypes.put("x-rays","diap");
		semanticTypes.put("xray","diap");
		semanticTypes.put("depot","drugdrly");
		semanticTypes.put("immunotherapy","drugdrly");
		semanticTypes.put("infusion","drugdrly");
		semanticTypes.put("infusions","drugdrly");
		semanticTypes.put("injection","drugdrly");
		semanticTypes.put("injections","drugdrly");
		semanticTypes.put("manipulation","drugdrly");
		semanticTypes.put("modulation","drugdrly");
		semanticTypes.put("shot","drugdrly");
		semanticTypes.put("shots","drugdrly");
		semanticTypes.put("tablet","drugdrly");
		semanticTypes.put("therapy","drugdrly");
		semanticTypes.put("treatment","drugdrly");
		semanticTypes.put("actifed","drugoc");
		semanticTypes.put("advil","drugoc");
		semanticTypes.put("advil junior strength","drugoc");
		semanticTypes.put("advil liquigel","drugoc");
		semanticTypes.put("advil migraine","drugoc");
		semanticTypes.put("advil pediatric","drugoc");
		semanticTypes.put("aleve","drugoc");
		semanticTypes.put("aleve caplet","drugoc");
		semanticTypes.put("aleve easy open arthritis","drugoc");
		semanticTypes.put("aleve gelcap","drugoc");
		semanticTypes.put("alka-seltzer plus liquid gels","drugoc");
		semanticTypes.put("anacin","drugoc");
		semanticTypes.put("anaprox","drugoc");
		semanticTypes.put("anaprox-ds","drugoc");
		semanticTypes.put("ascriptin","drugoc");
		semanticTypes.put("aspergum","drugoc");
		semanticTypes.put("aspirin","drugoc");
		semanticTypes.put("bayer aspirin","drugoc");
		semanticTypes.put("bayer buffered aspirin","drugoc");
		semanticTypes.put("bayer low adult strength","drugoc");
		semanticTypes.put("bufferin","drugoc");
		semanticTypes.put("cepacol","drugoc");
		semanticTypes.put("children's advil","drugoc");
		semanticTypes.put("children's ibuprofen berry","drugoc");
		semanticTypes.put("children's motrin","drugoc");
		semanticTypes.put("comfort pac with naproxen","drugoc");
		semanticTypes.put("contac","drugoc");
		semanticTypes.put("coricidin","drugoc");
		semanticTypes.put("dayquil","drugoc");
		semanticTypes.put("dimetapp","drugoc");
		semanticTypes.put("dristan","drugoc");
		semanticTypes.put("ec-naprosyn","drugoc");
		semanticTypes.put("ecotrin","drugoc");
		semanticTypes.put("empirin","drugoc");
		semanticTypes.put("excedrin","drugoc");
		semanticTypes.put("excedrin ib","drugoc");
		semanticTypes.put("feverall","drugoc");
		semanticTypes.put("formula 44","drugoc");
		semanticTypes.put("genpril, ibu","drugoc");
		semanticTypes.put("goody’s powders","drugoc");
		semanticTypes.put("ibuprofen","drugoc");
		semanticTypes.put("leader naproxen sodium","drugoc");
		semanticTypes.put("liquiprin","drugoc");
		semanticTypes.put("midol","drugoc");
		semanticTypes.put("midol 200","drugoc");
		semanticTypes.put("midol extended relief","drugoc");
		semanticTypes.put("midol ib","drugoc");
		semanticTypes.put("midol maximum strength cramp formula","drugoc");
		semanticTypes.put("motrin","drugoc");
		semanticTypes.put("motrin childrens","drugoc");
		semanticTypes.put("motrin ib","drugoc");
		semanticTypes.put("motrin infant drops","drugoc");
		semanticTypes.put("motrin junior strength","drugoc");
		semanticTypes.put("motrin migraine pain","drugoc");
		semanticTypes.put("naprelan","drugoc");
		semanticTypes.put("naprelan 375","drugoc");
		semanticTypes.put("naprelan 500","drugoc");
		semanticTypes.put("naprelan 750","drugoc");
		semanticTypes.put("naprelan dose card","drugoc");
		semanticTypes.put("naprosyn","drugoc");
		semanticTypes.put("naproxen sodium","drugoc");
		semanticTypes.put("nuprin","drugoc");
		semanticTypes.put("nyquil","drugoc");
		semanticTypes.put("pamprin ib","drugoc");
		semanticTypes.put("panadol","drugoc");
		semanticTypes.put("robitussin","drugoc");
		semanticTypes.put("saint joseph aspirin-free","drugoc");
		semanticTypes.put("singlet","drugoc");
		semanticTypes.put("sinutab","drugoc");
		semanticTypes.put("st joseph adult chewable aspirin","drugoc");
		semanticTypes.put("sudafed","drugoc");
		semanticTypes.put("theraflu","drugoc");
		semanticTypes.put("triaminic","drugoc");
		semanticTypes.put("tylenol","drugoc");
		semanticTypes.put("vanquish","drugoc");
		semanticTypes.put("vicks","drugoc");
		semanticTypes.put("zicam","drugoc");
		semanticTypes.put("2-cda","drugpr");
		semanticTypes.put("5-fu","drugpr");
		semanticTypes.put("6-mercaptopurine","drugpr");
		semanticTypes.put("6-mp","drugpr");
		semanticTypes.put("6-tg","drugpr");
		semanticTypes.put("6-thioguanine","drugpr");
		semanticTypes.put("a-methapred","drugpr");
		semanticTypes.put("abraxane","drugpr");
		semanticTypes.put("adjuvant hormone therapy","drugpr");
		semanticTypes.put("adriamycin","drugpr");
		semanticTypes.put("adrucil","drugpr");
		semanticTypes.put("adt","drugpr");
		semanticTypes.put("adt injection","drugpr");
		semanticTypes.put("afinitor","drugpr");
		semanticTypes.put("ai","drugpr");
		semanticTypes.put("ais","drugpr");
		semanticTypes.put("albumin-bound paclitaxel","drugpr");
		semanticTypes.put("aldesleukin","drugpr");
		semanticTypes.put("alferon n","drugpr");
		semanticTypes.put("alfuzosin","drugpr");
		semanticTypes.put("alkeran","drugpr");
		semanticTypes.put("alprazolam","drugpr");
		semanticTypes.put("anaprox","drugpr");
		semanticTypes.put("anastrozole","drugpr");
		semanticTypes.put("anddocetaxel","drugpr");
		semanticTypes.put("androgen blockade","drugpr");
		semanticTypes.put("anthracycline","drugpr");
		semanticTypes.put("anthracyclines","drugpr");
		semanticTypes.put("ara-c","drugpr");
		semanticTypes.put("aranesp","drugpr");
		semanticTypes.put("arimidex","drugpr");
		semanticTypes.put("aromasin","drugpr");
		semanticTypes.put("aromatase inhibitor","drugpr");
		semanticTypes.put("aromatase inhibitors","drugpr");
		semanticTypes.put("asdoxorubicin","drugpr");
		semanticTypes.put("asparaginase","drugpr");
		semanticTypes.put("ativan","drugpr");
		semanticTypes.put("axitinib","drugpr");
		semanticTypes.put("azacitidine","drugpr");
		semanticTypes.put("azd","drugpr");
		semanticTypes.put("azd0530","drugpr");
		semanticTypes.put("bendamustine","drugpr");
		semanticTypes.put("bervital","drugpr");
		semanticTypes.put("bevacizumab","drugpr");
		semanticTypes.put("bicnu","drugpr");
		semanticTypes.put("biologic therapy","drugpr");
		semanticTypes.put("biotherapy","drugpr");
		semanticTypes.put("bortezomib","drugpr");
		semanticTypes.put("botox","drugpr");
		semanticTypes.put("buprenorphine","drugpr");
		semanticTypes.put("caelyx","drugpr");
		semanticTypes.put("capecitabine","drugpr");
		semanticTypes.put("carboplatin","drugpr");
		semanticTypes.put("carfilzomib","drugpr");
		semanticTypes.put("carmustine","drugpr");
		semanticTypes.put("casodex","drugpr");
		semanticTypes.put("celebrex","drugpr");
		semanticTypes.put("celecoxib","drugpr");
		semanticTypes.put("chemo","drugpr");
		semanticTypes.put("chemotherapy","drugpr");
		semanticTypes.put("cialis","drugpr");
		semanticTypes.put("cipro","drugpr");
		semanticTypes.put("cisplatin","drugpr");
		semanticTypes.put("cisplatin","drugpr");
		semanticTypes.put("cladribine","drugpr");
		semanticTypes.put("clinoril","drugpr");
		semanticTypes.put("codeine","drugpr");
		semanticTypes.put("corticosteroid","drugpr");
		semanticTypes.put("corticosteroids","drugpr");
		semanticTypes.put("cortisone","drugpr");
		semanticTypes.put("cyclophosphamide","drugpr");
		semanticTypes.put("cytarabine","drugpr");
		semanticTypes.put("cytosine arabinoside","drugpr");
		semanticTypes.put("cytoxan","drugpr");
		semanticTypes.put("dabrafenib","drugpr");
		semanticTypes.put("dacarbazine","drugpr");
		semanticTypes.put("dacogen","drugpr");
		semanticTypes.put("dagarelix","drugpr");
		semanticTypes.put("darbepoetin alfa","drugpr");
		semanticTypes.put("darifenacin","drugpr");
		semanticTypes.put("dasatinib","drugpr");
		semanticTypes.put("daunomycin","drugpr");
		semanticTypes.put("daunorubicin","drugpr");
		semanticTypes.put("daypro","drugpr");
		semanticTypes.put("decadron","drugpr");
		semanticTypes.put("decitabine","drugpr");
		semanticTypes.put("degarilex","drugpr");
		semanticTypes.put("detrol","drugpr");
		semanticTypes.put("detrol la","drugpr");
		semanticTypes.put("dexamethasone","drugpr");
		semanticTypes.put("dexamethasone intensol","drugpr");
		semanticTypes.put("dexamethasone sodium phosphate","drugpr");
		semanticTypes.put("dexpak","drugpr");
		semanticTypes.put("dexpak 10 day","drugpr");
		semanticTypes.put("dexpak 13 day","drugpr");
		semanticTypes.put("dexpak 6 day","drugpr");
		semanticTypes.put("diazepam","drugpr");
		semanticTypes.put("diclofenac","drugpr");
		semanticTypes.put("diflunisal","drugpr");
		semanticTypes.put("disalcid","drugpr");
		semanticTypes.put("ditropan","drugpr");
		semanticTypes.put("ditropan patch","drugpr");
		semanticTypes.put("ditropan xl","drugpr");
		semanticTypes.put("docetaxel","drugpr");
		semanticTypes.put("dolobid","drugpr");
		semanticTypes.put("dose-dense chemotherapy","drugpr");
		semanticTypes.put("dox-sl","drugpr");
		semanticTypes.put("doxil","drugpr");
		semanticTypes.put("doxorubicin","drugpr");
		semanticTypes.put("dutasteride","drugpr");
		semanticTypes.put("efudex","drugpr");
		semanticTypes.put("eligard","drugpr");
		semanticTypes.put("ellence","drugpr");
		semanticTypes.put("eloxatin","drugpr");
		semanticTypes.put("elspar","drugpr");
		semanticTypes.put("enablex","drugpr");
		semanticTypes.put("epirubicin","drugpr");
		semanticTypes.put("epoetin alfa","drugpr");
		semanticTypes.put("epogen","drugpr");
		semanticTypes.put("eribulin","drugpr");
		semanticTypes.put("erlotinib","drugpr");
		semanticTypes.put("erlotinib hydrochloride","drugpr");
		semanticTypes.put("erwinaze","drugpr");
		semanticTypes.put("erwinia chrysanthemi","drugpr");
		semanticTypes.put("esomeprazole","drugpr");
		semanticTypes.put("estrogen","drugpr");
		semanticTypes.put("etodolac","drugpr");
		semanticTypes.put("etopophos","drugpr");
		semanticTypes.put("etoposide","drugpr");
		semanticTypes.put("etoposide phosphate","drugpr");
		semanticTypes.put("eulexin","drugpr");
		semanticTypes.put("evacet","drugpr");
		semanticTypes.put("everolimus","drugpr");
		semanticTypes.put("exemestane","drugpr");
		semanticTypes.put("fareston","drugpr");
		semanticTypes.put("farydak","drugpr");
		semanticTypes.put("faslodex","drugpr");
		semanticTypes.put("feldene","drugpr");
		semanticTypes.put("femara","drugpr");
		semanticTypes.put("fentanyl","drugpr");
		semanticTypes.put("fesoterodine fumarate","drugpr");
		semanticTypes.put("filgrastim","drugpr");
		semanticTypes.put("finasteride","drugpr");
		semanticTypes.put("fiorinal","drugpr");
		semanticTypes.put("firmagon","drugpr");
		semanticTypes.put("flavoxate","drugpr");
		semanticTypes.put("flavoxate hydrochloride","drugpr");
		semanticTypes.put("flo-pred","drugpr");
		semanticTypes.put("flomax","drugpr");
		semanticTypes.put("floricet","drugpr");
		semanticTypes.put("fludara","drugpr");
		semanticTypes.put("fludarabine","drugpr");
		semanticTypes.put("fluoroplex","drugpr");
		semanticTypes.put("fluorouracil","drugpr");
		semanticTypes.put("folfirinox","drugpr");
		semanticTypes.put("folinic acid","drugpr");
		semanticTypes.put("fulvestrant","drugpr");
		semanticTypes.put("g-csf","drugpr");
		semanticTypes.put("gefitinib","drugpr");
		semanticTypes.put("gelnique","drugpr");
		semanticTypes.put("gemcitabine","drugpr");
		semanticTypes.put("gemcitabine cisplatin","drugpr");
		semanticTypes.put("gemcitabine hydrochloride","drugpr");
		semanticTypes.put("gemcitabine oxaliplatin","drugpr");
		semanticTypes.put("gemcitabine-cisplatin","drugpr");
		semanticTypes.put("gemcitabine-oxaliplatin","drugpr");
		semanticTypes.put("gemzar","drugpr");
		semanticTypes.put("gentamicin","drugpr");
		semanticTypes.put("gentamycin","drugpr");
		semanticTypes.put("gm-csf","drugpr");
		semanticTypes.put("goserelin","drugpr");
		semanticTypes.put("gp100","drugpr");
		semanticTypes.put("granix","drugpr");
		semanticTypes.put("halaven","drugpr");
		semanticTypes.put("hctz","drugpr");
		semanticTypes.put("herceptin","drugpr");
		semanticTypes.put("hormonal","drugpr");
		semanticTypes.put("hormone","drugpr");
		semanticTypes.put("hydrea","drugpr");
		semanticTypes.put("hydrocodone","drugpr");
		semanticTypes.put("hydromorphone","drugpr");
		semanticTypes.put("hydroxyurea","drugpr");
		semanticTypes.put("idamycin pfs","drugpr");
		semanticTypes.put("idarubicin","drugpr");
		semanticTypes.put("imatinib","drugpr");
		semanticTypes.put("imatinib","drugpr");
		semanticTypes.put("immunotherapy","drugpr");
		semanticTypes.put("indocin","drugpr");
		semanticTypes.put("indomethacin","drugpr");
		semanticTypes.put("interferon alfa-2b","drugpr");
		semanticTypes.put("interferon alfa-n3","drugpr");
		semanticTypes.put("intron a","drugpr");
		semanticTypes.put("ipilimumab","drugpr");
		semanticTypes.put("iressa","drugpr");
		semanticTypes.put("ixabepilone","drugpr");
		semanticTypes.put("ixempra","drugpr");
		semanticTypes.put("ketoconzaole","drugpr");
		semanticTypes.put("ketorolac tromethamine","drugpr");
		semanticTypes.put("keytruda","drugpr");
		semanticTypes.put("klonopin","drugpr");
		semanticTypes.put("kyprolis","drugpr");
		semanticTypes.put("lapatinib","drugpr");
		semanticTypes.put("lenalidomide","drugpr");
		semanticTypes.put("letrozole","drugpr");
		semanticTypes.put("leucovorin calcium","drugpr");
		semanticTypes.put("leukine","drugpr");
		semanticTypes.put("leuprolide","drugpr");
		semanticTypes.put("leustatin","drugpr");
		semanticTypes.put("levorphanol","drugpr");
		semanticTypes.put("lhrh","drugpr");
		semanticTypes.put("lipodox","drugpr");
		semanticTypes.put("lipodox 50","drugpr");
		semanticTypes.put("liposomal doxorubicin","drugpr");
		semanticTypes.put("lodine","drugpr");
		semanticTypes.put("lorazepam","drugpr");
		semanticTypes.put("lorcet","drugpr");
		semanticTypes.put("lortab","drugpr");
		semanticTypes.put("lotusate","drugpr");
		semanticTypes.put("lupron","drugpr");
		semanticTypes.put("mebaral","drugpr");
		semanticTypes.put("medrol","drugpr");
		semanticTypes.put("medrol (pak)","drugpr");
		semanticTypes.put("medrol pak","drugpr");
		semanticTypes.put("megace","drugpr");
		semanticTypes.put("megestrol acetate","drugpr");
		semanticTypes.put("mekinist","drugpr");
		semanticTypes.put("meloxicam","drugpr");
		semanticTypes.put("melphalan","drugpr");
		semanticTypes.put("mercaptopurine","drugpr");
		semanticTypes.put("methotrexate","drugpr");
		semanticTypes.put("methotrexate sodium","drugpr");
		semanticTypes.put("methylprednisolone","drugpr");
		semanticTypes.put("millipred","drugpr");
		semanticTypes.put("millipred dp","drugpr");
		semanticTypes.put("mirabegron","drugpr");
		semanticTypes.put("mitomycin","drugpr");
		semanticTypes.put("mitomycin c","drugpr");
		semanticTypes.put("mitoxantrone","drugpr");
		semanticTypes.put("mitozytrex","drugpr");
		semanticTypes.put("mobic","drugpr");
		semanticTypes.put("mtx","drugpr");
		semanticTypes.put("mutamycin","drugpr");
		semanticTypes.put("myrbetriq","drugpr");
		semanticTypes.put("nabumetone","drugpr");
		semanticTypes.put("naprosyn","drugpr");
		semanticTypes.put("naproxen","drugpr");
		semanticTypes.put("naproxen sodium","drugpr");
		semanticTypes.put("navelbine","drugpr");
		semanticTypes.put("neumega","drugpr");
		semanticTypes.put("neupogen","drugpr");
		semanticTypes.put("nilandron","drugpr");
		semanticTypes.put("nivolumab","drugpr");
		semanticTypes.put("norco","drugpr");
		semanticTypes.put("onabotulinumtoxin a","drugpr");
		semanticTypes.put("oncet","drugpr");
		semanticTypes.put("oncovin","drugpr");
		semanticTypes.put("opdivo","drugpr");
		semanticTypes.put("oprelvekin","drugpr");
		semanticTypes.put("orapred odt","drugpr");
		semanticTypes.put("oxaliplatin","drugpr");
		semanticTypes.put("oxaprozin","drugpr");
		semanticTypes.put("oxybutinin","drugpr");
		semanticTypes.put("oxybutinin chloride","drugpr");
		semanticTypes.put("oxybutinin chloride er","drugpr");
		semanticTypes.put("oxycodone","drugpr");
		semanticTypes.put("oxycontin","drugpr");
		semanticTypes.put("oxytrol","drugpr");
		semanticTypes.put("paclitaxel","drugpr");
		semanticTypes.put("paclitaxel albumin-stabilized nanoparticle formulation","drugpr");
		semanticTypes.put("paclitaxel-protein bound","drugpr");
		semanticTypes.put("panobinostat","drugpr");
		semanticTypes.put("paxal","drugpr");
		semanticTypes.put("pediapred","drugpr");
		semanticTypes.put("peginterferon alfa-2b","drugpr");
		semanticTypes.put("pegintron","drugpr");
		semanticTypes.put("pegintron redipen","drugpr");
		semanticTypes.put("pegylated liposomal doxorubicin hydrochloride","drugpr");
		semanticTypes.put("pembrolizumab","drugpr");
		semanticTypes.put("perjeta","drugpr");
		semanticTypes.put("pertuzumab","drugpr");
		semanticTypes.put("piroxicam","drugpr");
		semanticTypes.put("platinum agent","drugpr");
		semanticTypes.put("platinum agents","drugpr");
		semanticTypes.put("plavix","drugpr");
		semanticTypes.put("plx4032","drugpr");
		semanticTypes.put("pomalidomide","drugpr");
		semanticTypes.put("pomalyst","drugpr");
		semanticTypes.put("predinosone","drugpr");
		semanticTypes.put("prednisolone","drugpr");
		semanticTypes.put("prednisolone acetate","drugpr");
		semanticTypes.put("prednisolone sodium phosphate","drugpr");
		semanticTypes.put("prednisone","drugpr");
		semanticTypes.put("prednisone intensol","drugpr");
		semanticTypes.put("procet","drugpr");
		semanticTypes.put("procrit","drugpr");
		semanticTypes.put("proleukin","drugpr");
		semanticTypes.put("prolia","drugpr");
		semanticTypes.put("prominal","drugpr");
		semanticTypes.put("proscar","drugpr");
		semanticTypes.put("prosteon","drugpr");
		semanticTypes.put("provenge","drugpr");
		semanticTypes.put("purinethol","drugpr");
		semanticTypes.put("purixan","drugpr");
		semanticTypes.put("rapaflo","drugpr");
		semanticTypes.put("rayos","drugpr");
		semanticTypes.put("reclast","drugpr");
		semanticTypes.put("relafen","drugpr");
		semanticTypes.put("revlimid","drugpr");
		semanticTypes.put("rg7204","drugpr");
		semanticTypes.put("rheumatrex","drugpr");
		semanticTypes.put("ro5185426","drugpr");
		semanticTypes.put("salsalate","drugpr");
		semanticTypes.put("sanctura","drugpr");
		semanticTypes.put("sanctura xr","drugpr");
		semanticTypes.put("sargramostim","drugpr");
		semanticTypes.put("serm","drugpr");
		semanticTypes.put("solifenacin","drugpr");
		semanticTypes.put("solu-medrol","drugpr");
		semanticTypes.put("soneryl","drugpr");
		semanticTypes.put("sorafenib","drugpr");
		semanticTypes.put("steroids","drugpr");
		semanticTypes.put("sulindac","drugpr");
		semanticTypes.put("sunitinib malate","drugpr");
		semanticTypes.put("sutent","drugpr");
		semanticTypes.put("sylatron","drugpr");
		semanticTypes.put("sylatron 4-pack","drugpr");
		semanticTypes.put("tabloid","drugpr");
		semanticTypes.put("tafinlar","drugpr");
		semanticTypes.put("tamoxifen","drugpr");
		semanticTypes.put("tamsulosin","drugpr");
		semanticTypes.put("tarceva","drugpr");
		semanticTypes.put("taxane","drugpr");
		semanticTypes.put("taxanes","drugpr");
		semanticTypes.put("taxol","drugpr");
		semanticTypes.put("taxotere","drugpr");
		semanticTypes.put("tbo-filgrastim","drugpr");
		semanticTypes.put("temodar","drugpr");
		semanticTypes.put("temozolomide","drugpr");
		semanticTypes.put("terazosin","drugpr");
		semanticTypes.put("testopel","drugpr");
		semanticTypes.put("thalidomide","drugpr");
		semanticTypes.put("thalomid","drugpr");
		semanticTypes.put("thioguanine","drugpr");
		semanticTypes.put("tki","drugpr");
		semanticTypes.put("tkis","drugpr");
		semanticTypes.put("tolterodine","drugpr");
		semanticTypes.put("toposar","drugpr");
		semanticTypes.put("topotecan","drugpr");
		semanticTypes.put("toradol","drugpr");
		semanticTypes.put("toremifene","drugpr");
		semanticTypes.put("toviaz","drugpr");
		semanticTypes.put("trametinib","drugpr");
		semanticTypes.put("trastuzumab","drugpr");
		semanticTypes.put("treanda","drugpr");
		semanticTypes.put("trelstar","drugpr");
		semanticTypes.put("trexall","drugpr");
		semanticTypes.put("trospium","drugpr");
		semanticTypes.put("trt","drugpr");
		semanticTypes.put("tyrosine kinase inhibitor","drugpr");
		semanticTypes.put("tyrosine kinase inhibitors","drugpr");
		semanticTypes.put("urotrol","drugpr");
		semanticTypes.put("uroxatral","drugpr");
		semanticTypes.put("valium","drugpr");
		semanticTypes.put("vantas","drugpr");
		semanticTypes.put("vatalanib","drugpr");
		semanticTypes.put("velcade","drugpr");
		semanticTypes.put("vemurafenib","drugpr");
		semanticTypes.put("veripred 20","drugpr");
		semanticTypes.put("vesicare","drugpr");
		semanticTypes.put("vesparaz","drugpr");
		semanticTypes.put("viadur","drugpr");
		semanticTypes.put("viagra","drugpr");
		semanticTypes.put("vicodin","drugpr");
		semanticTypes.put("vidaza","drugpr");
		semanticTypes.put("vimovo","drugpr");
		semanticTypes.put("vincasar pfs","drugpr");
		semanticTypes.put("vincristine","drugpr");
		semanticTypes.put("vinorelbine","drugpr");
		semanticTypes.put("voltaren","drugpr");
		semanticTypes.put("vp-16","drugpr");
		semanticTypes.put("xanax","drugpr");
		semanticTypes.put("xeloda","drugpr");
		semanticTypes.put("xgeva","drugpr");
		semanticTypes.put("xodol","drugpr");
		semanticTypes.put("xofigo","drugpr");
		semanticTypes.put("xtandi","drugpr");
		semanticTypes.put("yervoy","drugpr");
		semanticTypes.put("zelboraf","drugpr");
		semanticTypes.put("zoladex","drugpr");
		semanticTypes.put("zometa","drugpr");
		semanticTypes.put("zydone","drugpr");
		semanticTypes.put("zytiga","drugpr");
		semanticTypes.put("acral lentiginous melanoma","dysn");
		semanticTypes.put("adenopathy","dysn");
		semanticTypes.put("atypia","dysn");
		semanticTypes.put("bladder stone","dysn");
		semanticTypes.put("bone fracture","dysn");
		semanticTypes.put("bone fractures","dysn");
		semanticTypes.put("bone lytic lesions","dysn");
		semanticTypes.put("bone metastasis","dysn");
		semanticTypes.put("bph","dysn");
		semanticTypes.put("braf","dysn");
		semanticTypes.put("braf v600e","dysn");
		semanticTypes.put("c-kit","dysn");
		semanticTypes.put("castrate resistent prostate cancer","dysn");
		semanticTypes.put("cataract","dysn");
		semanticTypes.put("cdk4","dysn");
		semanticTypes.put("celiac artery","dysn");
		semanticTypes.put("copd","dysn");
		semanticTypes.put("cva","dysn");
		semanticTypes.put("cyst","dysn");
		semanticTypes.put("dermatitis","dysn");
		semanticTypes.put("desmoplasia","dysn");
		semanticTypes.put("diabetes","dysn");
		semanticTypes.put("diabetes mellitus","dysn");
		semanticTypes.put("diabetes mellitus type 2","dysn");
		semanticTypes.put("dvt","dysn");
		semanticTypes.put("enlarged prostate","dysn");
		semanticTypes.put("extramedullary disease","dysn");
		semanticTypes.put("foci","dysn");
		semanticTypes.put("gross hematuria","dysn");
		semanticTypes.put("hematuria","dysn");
		semanticTypes.put("hernia","dysn");
		semanticTypes.put("herpes","dysn");
		semanticTypes.put("hydrocele","dysn");
		semanticTypes.put("hydronephrosis","dysn");
		semanticTypes.put("hypercholesterolemia","dysn");
		semanticTypes.put("hyperplasia","dysn");
		semanticTypes.put("hypogonadism","dysn");
		semanticTypes.put("kidney stones","dysn");
		semanticTypes.put("lentigo maligna melanoma","dysn");
		semanticTypes.put("light chain deposition disease","dysn");
		semanticTypes.put("lung cancer","dysn");
		semanticTypes.put("lymphoma","dysn");
		semanticTypes.put("mellitus type 2","dysn");
		semanticTypes.put("mgus","dysn");
		semanticTypes.put("monoclonal gammopathy of undetermined significance","dysn");
		semanticTypes.put("multiple myeloma","dysn");
		semanticTypes.put("nodular melanoma","dysn");
		semanticTypes.put("nras","dysn");
		semanticTypes.put("oab","dysn");
		semanticTypes.put("obesity","dysn");
		semanticTypes.put("osteoporosis","dysn");
		semanticTypes.put("osteosclerotic myeloma","dysn");
		semanticTypes.put("other plasma cell disorder","dysn");
		semanticTypes.put("overactive bladder","dysn");
		semanticTypes.put("pancreatitis","dysn");
		semanticTypes.put("plasma cell leukemia","dysn");
		semanticTypes.put("poems syndrome","dysn");
		semanticTypes.put("portal vein","dysn");
		semanticTypes.put("prostatitis","dysn");
		semanticTypes.put("pvr","dysn");
		semanticTypes.put("renal stones","dysn");
		semanticTypes.put("rrp","dysn");
		semanticTypes.put("smouldering myeloma","dysn");
		semanticTypes.put("solitary plasmacytoma","dysn");
		semanticTypes.put("spinal cord compression","dysn");
		semanticTypes.put("splenic vein","dysn");
		semanticTypes.put("stones","dysn");
		semanticTypes.put("superficial spreading melanoma","dysn");
		semanticTypes.put("superior mesenteric artery","dysn");
		semanticTypes.put("superior mesenteric vein","dysn");
		semanticTypes.put("systemic al","dysn");
		semanticTypes.put("systemic amyloidosis","dysn");
		semanticTypes.put("t3a","dysn");
		semanticTypes.put("ulceration status","dysn");
		semanticTypes.put("uptake","dysn");
		semanticTypes.put("urinary retention","dysn");
		semanticTypes.put("uti","dysn");
		semanticTypes.put("uti's","dysn");
		semanticTypes.put("v600k/r","dysn");
		semanticTypes.put("waldenstroms macroglobulinemia","dysn");
		semanticTypes.put("for","for");
		semanticTypes.put("from","from");
		semanticTypes.put("in","in");
		semanticTypes.put("here","locaticon");*/
/*		semanticTypes.put("appear",""lvb");
		semanticTypes.put("appears",""lvb");
		semanticTypes.put("become",""lvb");
		semanticTypes.put("becomes",""lvb");
		semanticTypes.put("feels",""lvb");
		semanticTypes.put("felt",""lvb");
		semanticTypes.put("looks",""lvb");
		semanticTypes.put("prove",""lvb");
		semanticTypes.put("proves",""lvb");
		semanticTypes.put("can",""mvb");
		semanticTypes.put("could",""mvb");
		semanticTypes.put("may",""mvb");
		semanticTypes.put("might",""mvb");
		semanticTypes.put("must",""mvb");
		semanticTypes.put("shall",""mvb");
		semanticTypes.put("should",""mvb");
		semanticTypes.put("will",""mvb");
		semanticTypes.put("would",""mvb");
		semanticTypes.put("will be approved",""mvb-beapproved");
		semanticTypes.put("may be evaluated",""mvb-beevaluated");
		semanticTypes.put("must be evaluated",""mvb-beevaluated");
		semanticTypes.put("will be considered",""mvb-beevaluated");
		semanticTypes.put("will be evaluated",""mvb-beevaluated");
		semanticTypes.put("will be restarted",""mvb-bestarted");
		semanticTypes.put("will be started",""mvb-bestarted");
		semanticTypes.put("may be treated",""mvb-betreated");
		semanticTypes.put("will be treated",""mvb-betreated");
		semanticTypes.put("may continue",""mvb-continue");
		semanticTypes.put("may resume",""mvb-continue");
		semanticTypes.put("might continue",""mvb-continue");
		semanticTypes.put("might resume",""mvb-continue");
		semanticTypes.put("will continue",""mvb-continue");
		semanticTypes.put("will resume",""mvb-continue");
		semanticTypes.put("will evaluate",""mvb-eval");
		semanticTypes.put("will study",""mvb-eval");
		semanticTypes.put("will recommend",""mvb-recomm");
		semanticTypes.put("will suggest",""mvb-recomm");
		semanticTypes.put("can resume",""mvb-start");
		semanticTypes.put("could start",""mvb-start");
		semanticTypes.put("may start",""mvb-start");
		semanticTypes.put("might start",""mvb-start");
		semanticTypes.put("will start",""mvb-start");
		semanticTypes.put("will undergo",""mvb-undergo");*/
/*		semanticTypes.put("no","negata");
		semanticTypes.put("neoplasia","neop");
		semanticTypes.put("oncocytoma","neop");
		semanticTypes.put("dysplasia","neop-abn");
		semanticTypes.put("adenocarcinoma","neop-can");
		semanticTypes.put("cancer","neop-can");
		semanticTypes.put("carcinoma","neop-can");
		semanticTypes.put("malignancy","neop-can");
		semanticTypes.put("prostate cancer","neop-can");
		semanticTypes.put("bony lesion","neop-les");
		semanticTypes.put("lesion","neop-les");
		semanticTypes.put("lesions","neop-les");
		semanticTypes.put("lytic lesion","neop-les");
		semanticTypes.put("lytic lesions","neop-les");
		semanticTypes.put("osseous lesion","neop-les");
		semanticTypes.put("osseous lesions","neop-les");
		semanticTypes.put("metastases","neop-mets");
		semanticTypes.put("metastasis","neop-mets");
		semanticTypes.put("metastatic","neop-mets");
		semanticTypes.put("metastatic carcinoma","neop-mets");
		semanticTypes.put("metastatic disease","neop-mets");
		semanticTypes.put("metastatic prostate cancer","neop-mets");
		semanticTypes.put("mass","neop-tum");
		semanticTypes.put("masses","neop-tum");
		semanticTypes.put("tumor","neop-tum");
		semanticTypes.put("tumors","neop-tum");
		semanticTypes.put("of","of");
		semanticTypes.put("off","off");
		semanticTypes.put("office visit","offvis");
		semanticTypes.put("on","on");
		semanticTypes.put("gentleman","patien");
		semanticTypes.put("he","patien");
		semanticTypes.put("him","patien");
		semanticTypes.put("patient","patien");
		semanticTypes.put("she","patien");
		semanticTypes.put("subject","patien");
		semanticTypes.put("this","patien");
		semanticTypes.put("3d-conformal radiotherapy","prbymeth");
		semanticTypes.put("5-hiaa","prbymeth");
		semanticTypes.put("5-hydroxyindoleactic acid","prbymeth");
		semanticTypes.put("abdominal ultrasound","prbymeth");
		semanticTypes.put("absolute neutrophil count","prbymeth");
		semanticTypes.put("accelerated breast irradiation","prbymeth");
		semanticTypes.put("accelerated partial breast irradiation","prbymeth");
		semanticTypes.put("adjuvant therapy","prbymeth");
		semanticTypes.put("albumin level","prbymeth");
		semanticTypes.put("alnd","prbymeth");
		semanticTypes.put("anc","prbymeth");
		semanticTypes.put("anemia","prbymeth");
		semanticTypes.put("angiography","prbymeth");
		semanticTypes.put("anterior colporrhaphy","prbymeth");
		semanticTypes.put("antibodies","prbymeth");
		semanticTypes.put("aredia","prbymeth");
		semanticTypes.put("augmentation cystoplasty","prbymeth");
		semanticTypes.put("autologous rectus fascial","prbymeth");
		semanticTypes.put("axillary lymph node dissection","prbymeth");
		semanticTypes.put("axxent","prbymeth");
		semanticTypes.put("bcs","prbymeth");
		semanticTypes.put("beam radiation","prbymeth");
		semanticTypes.put("behavioral modification","prbymeth");
		semanticTypes.put("bence jones protein","prbymeth");
		semanticTypes.put("beta 2 microglobulin","prbymeth");
		semanticTypes.put("beta-2 microglobulin level","prbymeth");
		semanticTypes.put("bilirubin","prbymeth");
		semanticTypes.put("bisphosphonate","prbymeth");
		semanticTypes.put("bisphosphonates","prbymeth");
		semanticTypes.put("bladder neck suspension","prbymeth");
		semanticTypes.put("bladder removal","prbymeth");
		semanticTypes.put("bladder suspension","prbymeth");
		semanticTypes.put("blood cell counts","prbymeth");
		semanticTypes.put("blood chemistries","prbymeth");
		semanticTypes.put("blood chemistry","prbymeth");
		semanticTypes.put("blood chemistry panel","prbymeth");
		semanticTypes.put("blood count","prbymeth");
		semanticTypes.put("blood marker tests","prbymeth");
		semanticTypes.put("blood protein","prbymeth");
		semanticTypes.put("blood proteins","prbymeth");
		semanticTypes.put("blood samples","prbymeth");
		semanticTypes.put("blood sugar levels","prbymeth");
		semanticTypes.put("blood test","prbymeth");
		semanticTypes.put("blood tests","prbymeth");
		semanticTypes.put("bone marrow aspiration","prbymeth");
		semanticTypes.put("bone marrow biopsies","prbymeth");
		semanticTypes.put("bone marrow biopsy","prbymeth");
		semanticTypes.put("brachytherapy","prbymeth");
		semanticTypes.put("breast mri","prbymeth");
		semanticTypes.put("breast physical exam","prbymeth");
		semanticTypes.put("breast self-exam","prbymeth");
		semanticTypes.put("breast-conserving surgery","prbymeth");
		semanticTypes.put("bse","prbymeth");
		semanticTypes.put("c-peptide","prbymeth");
		semanticTypes.put("c-peptide levels","prbymeth");
		semanticTypes.put("ca 153","prbymeth");
		semanticTypes.put("ca 2729","prbymeth");
		semanticTypes.put("ca125","prbymeth");
		semanticTypes.put("ca19-9","prbymeth");
		semanticTypes.put("calcium","prbymeth");
		semanticTypes.put("calcium level","prbymeth");
		semanticTypes.put("calcium levels","prbymeth");
		semanticTypes.put("carbon coated zirconium beads","prbymeth");
		semanticTypes.put("carcinoembryonic antigen","prbymeth");
		semanticTypes.put("catheter","prbymeth");
		semanticTypes.put("catheters","prbymeth");
		semanticTypes.put("cea","prbymeth");
		semanticTypes.put("cell sample","prbymeth");
		semanticTypes.put("cerebrospinal fluid","prbymeth");
		semanticTypes.put("cga","prbymeth");
		semanticTypes.put("chloride","prbymeth");
		semanticTypes.put("cholangiopancreatography","prbymeth");
		semanticTypes.put("chromogranin a","prbymeth");
		semanticTypes.put("circulating tumor cells","prbymeth");
		semanticTypes.put("coagulation","prbymeth");
		semanticTypes.put("coaptite","prbymeth");
		semanticTypes.put("coaptite injection","prbymeth");
		semanticTypes.put("coaptite injections","prbymeth");
		semanticTypes.put("collagen","prbymeth");
		semanticTypes.put("collagen injection","prbymeth");
		semanticTypes.put("collagen injections","prbymeth");
		semanticTypes.put("computed tomography","prbymeth");
		semanticTypes.put("computerized tomography","prbymeth");
		semanticTypes.put("contura","prbymeth");
		semanticTypes.put("creatinine level","prbymeth");
		semanticTypes.put("cryogenetics","prbymeth");
		semanticTypes.put("cryosurgery","prbymeth");
		semanticTypes.put("csf","prbymeth");
		semanticTypes.put("ct-guided needle biopsy","prbymeth");
		semanticTypes.put("cyberknife","prbymeth");
		semanticTypes.put("cytogenetics","prbymeth");
		semanticTypes.put("denosumab","prbymeth");
		semanticTypes.put("dextranomer/hyaluronic acid copolymer","prbymeth");
		semanticTypes.put("diastolic blood pressure","prbymeth");
		semanticTypes.put("dietary change","prbymeth");
		semanticTypes.put("dietary changes","prbymeth");
		semanticTypes.put("diff","prbymeth");
		semanticTypes.put("digital tomosynthesis","prbymeth");
		semanticTypes.put("distal pancreatectomy","prbymeth");
		semanticTypes.put("double mastectomy","prbymeth");
		semanticTypes.put("ductal lavage","prbymeth");
		semanticTypes.put("ecog performance","prbymeth");
		semanticTypes.put("ecog performance status","prbymeth");
		semanticTypes.put("ecog score","prbymeth");
		semanticTypes.put("educational material","prbymeth");
		semanticTypes.put("educational materials","prbymeth");
		semanticTypes.put("electrolytes","prbymeth");
		semanticTypes.put("electromyography","prbymeth");
		semanticTypes.put("endoscope","prbymeth");
		semanticTypes.put("endoscopic retrograde cholangiopancreatography","prbymeth");
		semanticTypes.put("endoscopic stent placement","prbymeth");
		semanticTypes.put("endoscopic ultrasound","prbymeth");
		semanticTypes.put("enzyme","prbymeth");
		semanticTypes.put("enzymes","prbymeth");
		semanticTypes.put("ercp","prbymeth");
		semanticTypes.put("erythrocyte sedimentation rate","prbymeth");
		semanticTypes.put("esr","prbymeth");
		semanticTypes.put("eus","prbymeth");
		semanticTypes.put("excise","prbymeth");
		semanticTypes.put("excises","prbymeth");
		semanticTypes.put("excision","prbymeth");
		semanticTypes.put("excisional","prbymeth");
		semanticTypes.put("excisional biopsy","prbymeth");
		semanticTypes.put("external beam radiation therapy","prbymeth");
		semanticTypes.put("external radiation","prbymeth");
		semanticTypes.put("fascial","prbymeth");
		semanticTypes.put("fats","prbymeth");
		semanticTypes.put("fine needle aspiration","prbymeth");
		semanticTypes.put("fine needle aspiration biopsy","prbymeth");
		semanticTypes.put("fine-needle aspiration","prbymeth");
		semanticTypes.put("fish","prbymeth");
		semanticTypes.put("flow cytometry","prbymeth");
		semanticTypes.put("fluorescence in situ hybridization","prbymeth");
		semanticTypes.put("fluorescent in situ hybridization","prbymeth");
		semanticTypes.put("fna","prbymeth");
		semanticTypes.put("free light chain assay","prbymeth");
		semanticTypes.put("freelite","prbymeth");
		semanticTypes.put("gastric bypass","prbymeth");
		semanticTypes.put("gastrin","prbymeth");
		semanticTypes.put("gfr","prbymeth");
		semanticTypes.put("glomerular filtration rate","prbymeth");
		semanticTypes.put("glucagon","prbymeth");
		semanticTypes.put("glutareldehyde crosslinked collagen","prbymeth");
		semanticTypes.put("hematocrit","prbymeth");
		semanticTypes.put("hgb","prbymeth");
		semanticTypes.put("hifu","prbymeth");
		semanticTypes.put("high intensity ultrasound","prbymeth");
		semanticTypes.put("high-energy particle","prbymeth");
		semanticTypes.put("high-energy particle therapy","prbymeth");
		semanticTypes.put("high-energy xray","prbymeth");
		semanticTypes.put("hyaluronic acid/dextran co-polymer","prbymeth");
		semanticTypes.put("hyaluronic acid/dextran copolymer","prbymeth");
		semanticTypes.put("hypofractionated radiation therapy","prbymeth");
		semanticTypes.put("ihc tests","prbymeth");
		semanticTypes.put("immunohistochemistry","prbymeth");
		semanticTypes.put("imrt","prbymeth");
		semanticTypes.put("incisional","prbymeth");
		semanticTypes.put("incisional biopsy","prbymeth");
		semanticTypes.put("inform her2 dual ish test","prbymeth");
		semanticTypes.put("insulin","prbymeth");
		semanticTypes.put("insulin level","prbymeth");
		semanticTypes.put("internal radiation","prbymeth");
		semanticTypes.put("interstim","prbymeth");
		semanticTypes.put("interstitial brachytherapy","prbymeth");
		semanticTypes.put("intracavitary brachytherapy","prbymeth");
		semanticTypes.put("intraoperative radiation therapy","prbymeth");
		semanticTypes.put("iort","prbymeth");
		semanticTypes.put("irradiation","prbymeth");
		semanticTypes.put("kegel","prbymeth");
		semanticTypes.put("kegel exercises","prbymeth");
		semanticTypes.put("laparoscopy","prbymeth");
		semanticTypes.put("laproscopic colposuspension","prbymeth");
		semanticTypes.put("lipids","prbymeth");
		semanticTypes.put("liver enzymes","prbymeth");
		semanticTypes.put("liver function","prbymeth");
		semanticTypes.put("lumbar puncture","prbymeth");
		semanticTypes.put("lumpectomy","prbymeth");
		semanticTypes.put("lymph node exam","prbymeth");
		semanticTypes.put("macroplastique","prbymeth");
		semanticTypes.put("macroplastique injection","prbymeth");
		semanticTypes.put("macroplastique injections","prbymeth");
		semanticTypes.put("magnesium","prbymeth");
		semanticTypes.put("magnetic resonance cholangiopancreatography","prbymeth");
		semanticTypes.put("mammaprint","prbymeth");
		semanticTypes.put("mammosite","prbymeth");
		semanticTypes.put("mammostrat","prbymeth");
		semanticTypes.put("mammotome","prbymeth");
		semanticTypes.put("margin probe","prbymeth");
		semanticTypes.put("marginprobe","prbymeth");
		semanticTypes.put("marshall-marchetti-krantz procedure","prbymeth");
		semanticTypes.put("mastectomy","prbymeth");
		semanticTypes.put("mibb","prbymeth");
		semanticTypes.put("minimally invasive breast biopsy","prbymeth");
		semanticTypes.put("mitotic rate","prbymeth");
		semanticTypes.put("modified radical mastectomy","prbymeth");
		semanticTypes.put("mohs micrographic surgery","prbymeth");
		semanticTypes.put("mrcp","prbymeth");
		semanticTypes.put("needle","prbymeth");
		semanticTypes.put("needle suspension","prbymeth");
		semanticTypes.put("needles","prbymeth");
		semanticTypes.put("neoadjuvant therapy","prbymeth");
		semanticTypes.put("neutropenia","prbymeth");
		semanticTypes.put("neutrophil","prbymeth");
		semanticTypes.put("nipple-sparing mastectomy","prbymeth");
		semanticTypes.put("number of nodes collected","prbymeth");
		semanticTypes.put("number of nodes positive for melanoma","prbymeth");
		semanticTypes.put("octreoscan","prbymeth");
		semanticTypes.put("oncotype dx test","prbymeth");
		semanticTypes.put("open colposuspension","prbymeth");
		semanticTypes.put("pamidronate","prbymeth");
		semanticTypes.put("pancreatic polypeptide","prbymeth");
		semanticTypes.put("paraprotein level","prbymeth");
		semanticTypes.put("paravaginal defect repair","prbymeth");
		semanticTypes.put("partial mastectomy","prbymeth");
		semanticTypes.put("pcr","prbymeth");
		semanticTypes.put("pelvic floor electromyography","prbymeth");
		semanticTypes.put("pelvic floor muscle contraction","prbymeth");
		semanticTypes.put("percutaneous biopsy","prbymeth");
		semanticTypes.put("percutaneous needle biopsy","prbymeth");
		semanticTypes.put("percutaneous tibial nerve stimulation","prbymeth");
		semanticTypes.put("percutaneous transhepatic cholangiography","prbymeth");
		semanticTypes.put("perineometry","prbymeth");
		semanticTypes.put("peripheral blood smear","prbymeth");
		semanticTypes.put("peripheral nerve evaluation","prbymeth");
		semanticTypes.put("pfmt","prbymeth");
		semanticTypes.put("physical exam","prbymeth");
		semanticTypes.put("physical therapy","prbymeth");
		semanticTypes.put("platelet","prbymeth");
		semanticTypes.put("platelets","prbymeth");
		semanticTypes.put("plt","prbymeth");
		semanticTypes.put("plts","prbymeth");
		semanticTypes.put("pne","prbymeth");
		semanticTypes.put("polymerase chain reaction","prbymeth");
		semanticTypes.put("potassium","prbymeth");
		semanticTypes.put("potassium level","prbymeth");
		semanticTypes.put("prolapse surgery","prbymeth");
		semanticTypes.put("prosigna breast cancer prognostic gene signature assay","prbymeth");
		semanticTypes.put("prostatectomy","prbymeth");
		semanticTypes.put("proteins","prbymeth");
		semanticTypes.put("ptc","prbymeth");
		semanticTypes.put("ptns","prbymeth");
		semanticTypes.put("punch","prbymeth");
		semanticTypes.put("quadrantectomy","prbymeth");
		semanticTypes.put("quantitative immunoglobulin","prbymeth");
		semanticTypes.put("radiation","prbymeth");
		semanticTypes.put("radiation therapy","prbymeth");
		semanticTypes.put("radical mastectomy","prbymeth");
		semanticTypes.put("ralp","prbymeth");
		semanticTypes.put("rbc","prbymeth");
		semanticTypes.put("re-excision","prbymeth");
		semanticTypes.put("red blood cell","prbymeth");
		semanticTypes.put("red blood cells","prbymeth");
		semanticTypes.put("resection","prbymeth");
		semanticTypes.put("retropubic mid-urethral tape","prbymeth");
		semanticTypes.put("retropubic suspension","prbymeth");
		semanticTypes.put("robotic-assisted laparoscopic prostatectomy","prbymeth");
		semanticTypes.put("robotic-assisted laparoscopic radical prostatectomy","prbymeth");
		semanticTypes.put("sacral neuromodulation","prbymeth");
		semanticTypes.put("savi","prbymeth");
		semanticTypes.put("seed","prbymeth");
		semanticTypes.put("seeds","prbymeth");
		semanticTypes.put("segmental mastectomy","prbymeth");
		semanticTypes.put("sentinel lymph node biopsy","prbymeth");
		semanticTypes.put("sentinel node biopsy","prbymeth");
		semanticTypes.put("serotonin","prbymeth");
		semanticTypes.put("serum free light chain assay","prbymeth");
		semanticTypes.put("serum free light chain assays","prbymeth");
		semanticTypes.put("serum protein electrophoresis","prbymeth");
		semanticTypes.put("shave biopsy","prbymeth");
		semanticTypes.put("silicone","prbymeth");
		semanticTypes.put("simple mastectomy","prbymeth");
		semanticTypes.put("skin biopsy","prbymeth");
		semanticTypes.put("skin exam","prbymeth");
		semanticTypes.put("sling","prbymeth");
		semanticTypes.put("slings","prbymeth");
		semanticTypes.put("slnb","prbymeth");
		semanticTypes.put("snm","prbymeth");
		semanticTypes.put("sns","prbymeth");
		semanticTypes.put("sodium","prbymeth");
		semanticTypes.put("sodium level","prbymeth");
		semanticTypes.put("somatostatin","prbymeth");
		semanticTypes.put("somatostatin receptor scintigraphy","prbymeth");
		semanticTypes.put("spep","prbymeth");
		semanticTypes.put("spinal tap","prbymeth");
		semanticTypes.put("spot-light her2 cish test","prbymeth");
		semanticTypes.put("srs","prbymeth");
		semanticTypes.put("ß2-m","prbymeth");
		semanticTypes.put("ß2-microglobulin","prbymeth");
		semanticTypes.put("stem cell transplantation","prbymeth");
		semanticTypes.put("stereotactic-guided biopsy","prbymeth");
		semanticTypes.put("suburethral sling","prbymeth");
		semanticTypes.put("sugar","prbymeth");
		semanticTypes.put("surgery","prbymeth");
		semanticTypes.put("surgical biliary bypass","prbymeth");
		semanticTypes.put("surgical biopsy","prbymeth");
		semanticTypes.put("systolic blood pressure","prbymeth");
		semanticTypes.put("tension-free vaginal tape (tvt)","prbymeth");
		semanticTypes.put("thermography","prbymeth");
		semanticTypes.put("thrombocytopenia","prbymeth");
		semanticTypes.put("timed voiding","prbymeth");
		semanticTypes.put("tissue biopsy","prbymeth");
		semanticTypes.put("tissue sample","prbymeth");
		semanticTypes.put("total mastectomy","prbymeth");
		semanticTypes.put("total pancreatectomy","prbymeth");
		semanticTypes.put("trans-obturator foramen","prbymeth");
		semanticTypes.put("trans-obturator tape","prbymeth");
		semanticTypes.put("transducer","prbymeth");
		semanticTypes.put("transfusion","prbymeth");
		semanticTypes.put("transobturator foramen","prbymeth");
		semanticTypes.put("transobturator tape","prbymeth");
		semanticTypes.put("transplant comorbidity index","prbymeth");
		semanticTypes.put("tru-quant","prbymeth");
		semanticTypes.put("turbt","prbymeth");
		semanticTypes.put("turp","prbymeth");
		semanticTypes.put("u&e","prbymeth");
		semanticTypes.put("u&e test","prbymeth");
		semanticTypes.put("ultrasound","prbymeth");
		semanticTypes.put("urea and electrolytes","prbymeth");
		semanticTypes.put("urea and electrolytes test","prbymeth");
		semanticTypes.put("urea nitrogen","prbymeth");
		semanticTypes.put("urethral bulking","prbymeth");
		semanticTypes.put("urethral sling","prbymeth");
		semanticTypes.put("urinary diversion","prbymeth");
		semanticTypes.put("urine protein","prbymeth");
		semanticTypes.put("urine proteins","prbymeth");
		semanticTypes.put("urine sample","prbymeth");
		semanticTypes.put("urine samples","prbymeth");
		semanticTypes.put("urine test","prbymeth");
		semanticTypes.put("vacuum-assisted breast biopsy","prbymeth");
		semanticTypes.put("vaginal sling","prbymeth");
		semanticTypes.put("vasoactive intestinal peptide","prbymeth");
		semanticTypes.put("vip","prbymeth");
		semanticTypes.put("wbc","prbymeth");
		semanticTypes.put("whipple procedure","prbymeth");
		semanticTypes.put("white blood cell","prbymeth");
		semanticTypes.put("white blood cells","prbymeth");
		semanticTypes.put("wire","prbymeth");
		semanticTypes.put("wires","prbymeth");
		semanticTypes.put("xrt","prbymeth");
		semanticTypes.put("zirconium beads","prbymeth");
		semanticTypes.put("zoledronic acid","prbymeth");
		
		semanticTypes.put("i","provid");
		semanticTypes.put("we","provid");
		semanticTypes.put("consultation","ptconsul");
		semanticTypes.put("evaluation","ptconsul");
		semanticTypes.put("review","ptconsul");
		semanticTypes.put("benign","qlco");
		semanticTypes.put("decreased","qlco");
		semanticTypes.put("dropped","qlco");
		semanticTypes.put("elevated","qlco");
		semanticTypes.put("gone down","qlco");
		semanticTypes.put("gone up","qlco");
		semanticTypes.put("increased","qlco");
		semanticTypes.put("negative","qlco");
		semanticTypes.put("normal","qlco");
		semanticTypes.put("stable","qlco");
		semanticTypes.put("undectable","qlco");
		semanticTypes.put("african american","race");
		semanticTypes.put("african-american","race");
		semanticTypes.put("asian","race");
		semanticTypes.put("black","race");
		semanticTypes.put("caucasian","race");
		semanticTypes.put("hispanic","race");
		semanticTypes.put("vietnamese","race");
		semanticTypes.put("white","race");
		semanticTypes.put("remission","remiss");
		semanticTypes.put("since","since");
		semanticTypes.put("baby","sociid");
		semanticTypes.put("brother","sociid");
		semanticTypes.put("dad","sociid");
		semanticTypes.put("father","sociid");
		semanticTypes.put("female","sociid");
		semanticTypes.put("grand","sociid");
		semanticTypes.put("male","sociid");
		semanticTypes.put("this","sociid");
		semanticTypes.put("abdominal pain","sympto");
		semanticTypes.put("balance problem","sympto");
		semanticTypes.put("balance problems","sympto");
		semanticTypes.put("bleeding","sympto");
		semanticTypes.put("bleeding gums","sympto");
		semanticTypes.put("blood in the urine","sympto");
		semanticTypes.put("blurred vision","sympto");
		semanticTypes.put("bone pain","sympto");
		semanticTypes.put("bony pain","sympto");
		semanticTypes.put("bruising","sympto");
		semanticTypes.put("cold","sympto");
		semanticTypes.put("confusion","sympto");
		semanticTypes.put("dizzy","sympto");
		semanticTypes.put("enlarged lymph nodes","sympto");
		semanticTypes.put("excess bleeding","sympto");
		semanticTypes.put("excess bruising","sympto");
		semanticTypes.put("facial numbness","sympto");
		semanticTypes.put("fatigue","sympto");
		semanticTypes.put("fever","sympto");
		semanticTypes.put("flank pain","sympto");
		semanticTypes.put("frequent nosebleeds","sympto");
		semanticTypes.put("headache","sympto");
		semanticTypes.put("headaches","sympto");
		semanticTypes.put("hot flashes","sympto");
		semanticTypes.put("impotence","sympto");
		semanticTypes.put("incontinence","sympto");
		semanticTypes.put("joint pain","sympto");
		semanticTypes.put("leakage","sympto");
		semanticTypes.put("lightheaded","sympto");
		semanticTypes.put("loss of appetite","sympto");
		semanticTypes.put("luts","sympto");
		semanticTypes.put("night sweats","sympto");
		semanticTypes.put("no appetite","sympto");
		semanticTypes.put("nosebleeds","sympto");
		semanticTypes.put("not hungry","sympto");
		semanticTypes.put("off balance","sympto");
		semanticTypes.put("pain","sympto");
		semanticTypes.put("pelvic pain","sympto");
		semanticTypes.put("poor balance","sympto");
		semanticTypes.put("seizures","sympto");
		semanticTypes.put("severe nosebleeds","sympto");
		semanticTypes.put("shortness of breath","sympto");
		semanticTypes.put("sleepiness","sympto");
		semanticTypes.put("slurred speech","sympto");
		semanticTypes.put("swelling in the abdomen","sympto");
		semanticTypes.put("tiredness","sympto");
		semanticTypes.put("trouble with balance","sympto");
		semanticTypes.put("vomiting","sympto");
		semanticTypes.put("weakness","sympto");
		semanticTypes.put("weakness in one side of the body","sympto");
		semanticTypes.put("weight loss","sympto");
		semanticTypes.put("day","tempor");
		semanticTypes.put("month","tempor");
		semanticTypes.put("time","tempor");
		semanticTypes.put("today","tempor");
		semanticTypes.put("year","tempor");
		semanticTypes.put("pt2c","tnmstage");
		semanticTypes.put("to","to");
		semanticTypes.put("plan","treatment");
		semanticTypes.put("robotically assisted","treatment");
		semanticTypes.put("observation","waiting");
		semanticTypes.put("surveillance","waiting");
		semanticTypes.put("watchful waiting","waiting");
		semanticTypes.put("watchful waiting protocol","waiting");
		semanticTypes.put("watchful/waiting","waiting");
		semanticTypes.put("with","with");
		semanticTypes.put("abnormal","qlco");
/*		semanticTypes.put("developed",""avb-developed");
		semanticTypes.put("confirm",""avb-confirm");
		semanticTypes.put("confirmed",""avb-confirm");
		semanticTypes.put("confirms",""avb-confirm");
		semanticTypes.put("found",""avb-found");
		semanticTypes.put("has known",""bevbpa-known");*/
/*		semanticTypes.put("did show","did-show");
		semanticTypes.put("symptomatic","symptomatic");
		semanticTypes.put("asymptomatic","asymptomatic");
		semanticTypes.put("disease","dysn");
		semanticTypes.put("castrate resistant","dysn");
		semanticTypes.put("involvement","fnd");
		semanticTypes.put("consistent","presence");
		semanticTypes.put("suspicious","suspicious");
		semanticTypes.put("concerning","presence");
		semanticTypes.put("suggestive","presence");
		semanticTypes.put("evidence","presence");
		semanticTypes.put("documentation","presence");
		semanticTypes.put("progression","change-val");
		semanticTypes.put("resolution","change-val");
		semanticTypes.put("positive","presence");
		semanticTypes.put("discussion","discussion");
		semanticTypes.put("initiation","initiation");
		semanticTypes.put("history","history");
		semanticTypes.put("after","after");
		semanticTypes.put("her","patien");
		semanticTypes.put("also","also");
		semanticTypes.put("alternatives","alternatives");
		semanticTypes.put("approval","approval");
		semanticTypes.put("benefit","benefit");
		semanticTypes.put("benefits","benefits");
		semanticTypes.put("candidate","candidate");
		semanticTypes.put("combination","combination");
		semanticTypes.put("consideration","consideration");
		semanticTypes.put("continue","continue");
		semanticTypes.put("continue","continue");
		semanticTypes.put("cost","cost");
		semanticTypes.put("course","course");
		semanticTypes.put("currently","currently");
		semanticTypes.put("currently","currently");
		semanticTypes.put("dose","dose");
		semanticTypes.put("dose","dose");
		semanticTypes.put("due","due");
		semanticTypes.put("due","due");
		semanticTypes.put("effects","effects");
		semanticTypes.put("good","good");
		semanticTypes.put("happy","happy");
		semanticTypes.put("improved","improved");
		semanticTypes.put("improved","improved");
		semanticTypes.put("improvement","improvement");
		semanticTypes.put("improvement","improvement");
		semanticTypes.put("improvement","improvement");
		semanticTypes.put("instead","instead");
		semanticTypes.put("interested","interested");
		semanticTypes.put("managed","managed");
		semanticTypes.put("more","more");
		semanticTypes.put("not","not");
		semanticTypes.put("now","now");
		semanticTypes.put("now","now");
		semanticTypes.put("option","option");
		semanticTypes.put("literature","literature");
		semanticTypes.put("pamphlet","pamphlet");
		semanticTypes.put("pay","pay");
		semanticTypes.put("placed","placed");
		semanticTypes.put("pleased","pleased");
		semanticTypes.put("prescription","prescription");
		semanticTypes.put("problems","problems");
		semanticTypes.put("proceed","proceed");
		semanticTypes.put("progress","progress");
		semanticTypes.put("put","put");
		semanticTypes.put("reaction","reaction");
		semanticTypes.put("ready","ready");
		semanticTypes.put("repeat","repeat");
		semanticTypes.put("resolved","resolved");
		semanticTypes.put("result","result");
		semanticTypes.put("results","results");
		semanticTypes.put("samples","samples");
		semanticTypes.put("satisfied","satisfied");
		semanticTypes.put("stay","stay");
		semanticTypes.put("stay","stay");
		semanticTypes.put("still","still");
		semanticTypes.put("success","success");
		semanticTypes.put("supply","supply");
		semanticTypes.put("switch","switch");
		semanticTypes.put("switch","switch");
		semanticTypes.put("switched","switched");
		semanticTypes.put("trial","trial");
		semanticTypes.put("tried","tried");
		semanticTypes.put("was","was");
		semanticTypes.put("wean","wean");
		semanticTypes.put("well","well");
		semanticTypes.put("went","went");*/


		//semanticTypes.put("evidence","evidence");
		//semanticTypes.put("metastatic focus","mets-f");
		//semanticTypes.put("bone metastases","dysn");
	//	semanticTypes.put("increasing",""avb-increase");
	}
	
	public enum Source {
		PUBMED_ABSTRACT {
			@Override
			public String getMongoCollection() {
				return "annotations";
			}
		},
		PUBMED_FULLARTICLE {
			@Override
			public String getMongoCollection() {
				return "annotations";
			}
		}, 
		CT_SCAN {
			@Override
			public String getMongoCollection() {
				return "annotations";
			}
		},
		IMAGING {
			@Override
			public String getMongoCollection() {
				return "annotations";
			}
		},
		VISIT_NOTES {
			@Override
			public String getMongoCollection() {
				return "annotations";
			}
		},
		UNKNOWN {
			@Override
			public String getMongoCollection() {
				return "test";
			}
		},
		MEDS {
			@Override
			public String getMongoCollection() {
				return "discreet";
			}
		};
		public String getMongoCollection() {
			return "test";
		}
	}
	
	public enum VerbClass {
		LINKING_VERB, VERB_OF_BEING, INFINITIVE, ACTION, MODAL_AUX, PREPOSITIONAL;
	}
	
	public enum DependentPhraseClass {
		BEGINS_SENTENCE, PRECEDED_BY_COMMA, FOLLOWED_BY_VERB, OTHER;
	}
	
	public static final String MONGO_DATE_FORMAT = "yyyy-MM-dd'T'HH:mm:ss'Z'";
	
	// https://www.regex101.com/r/vL8jA2/2
	//public static final String DATE_REGEX_ST = "^\\d\\d?(-|\\/)(\\d\\d?(-|\\/))?\\d\\d(\\d{2})?$";
	public static final Pattern DATE_REGEX_ST = Pattern.compile("^\\d\\d?(-|\\/)(\\d\\d?(-|\\/))?\\d\\d(\\d{2})?$");
	// https://www.regex101.com/r/pX0gC8/4
	//public static final String GLEASON_REGEX = "(?i)(Gleason|GG)\\s*(score(\\s*of)?:?\\s*|grade\\s*)?(\\d\\s*\\+\\s*\\d|\\d\\s*\\(?\\d\\s*\\+\\s*\\d\\)?|\\s*\\d+)";
	public static final Pattern GLEASON_REGEX = Pattern.compile("(Gleason|GG)\\s*(score(\\s*of)?:?\\s*|grade\\s*)?(\\d\\s*\\+\\s*\\d|\\d\\s*\\(?\\d\\s*\\+\\s*\\d\\)?|\\s*\\d+)", Pattern.CASE_INSENSITIVE);
	
	//public static final String AGE_REGEX = "\\d{1,3}-year-old";
	public static final Pattern AGE_REGEX = Pattern.compile("\\d{1,3}-year-old");
	
	//public static final String PUNC = "!|\"|#|\\$|%|&|'|\\(|\\)|\\*|\\+|,|-|\\.|/|:|;|<|=|>|\\?|@|\\[|\\\\|]|\\^|_|`|\\{|\\||}|~";
	public static final Pattern PUNC = Pattern.compile("!|\"|#|\\$|%|&|'|\\(|\\)|\\*|\\+|,|-|\\.|/|:|;|<|=|>|\\?|@|\\[|\\]|\\^|_|`|\\{|\\||\\}|~");
	
	//public static final String VERBS_OF_BEING = "(?i)has|having|am|are|is|was|were|be|being|been|had|have";
	public static final Pattern VERBS_OF_BEING = Pattern.compile("has|having|am|are|is|was|were|be|being|been|had|have", Pattern.CASE_INSENSITIVE);
	
	//public static final String LINKING_VERBS = "(?i)appear|become|becomes|feels|felt|is|looks|prove|remained|remains|seemed|seems|abandoned|accepted|accepting|accessed|accompanied|achieved|acting|added|adjusted|administered|admitted|advanced|advised|affected|aggravated|aggravating|allowed|ambulating|analysed|answered|anticipated|applied|appreciated|approved|arranged|asked|asking|assessed|associated|attempted|attributed|available|awaiting|awakening|based|battling|becoming|began|beginning|begun|biopsied|bothered|broken|brought|bumped|called|cancelled|cared|carried|catheterized|caused|causing|challenging|changed|changing|characterized|checked|checking|chosen|clamped|cleaned|clear|cleared|clearing|climbed|climbing|clogged|co-existing|combined|come|comes|coming|commenced|compared|complained|complaining|complains|complete|completed|complicated|concerened|concerned|concerning|condylomata|confined|confirmed|confused|considered|considering|constipated|consulted|contacted|contemplating|continue|continued|continues|continuing|contraindicated|contributing|controlled|converted|corrected|counseled|counselled|covered|crept|cured|cut|cutting|dealing|decided|deciding|declined|declining|decreased|decreasing|deemed|deferred|dehydrated|delayed|delivered|demonstrated|denied|depressed|described|describing|desired|detailed|detected|determined|developed|developing|diagnosed|dilated|diminished|discharged|discontinued|discouraged|discussed|disinclined|documented|doing|done|doubled|draining|drawn|dribbling|drinking|dropped|dropping|dying|eating|ejaculated|elected|electing|emanating|emphasized|employed|emptying|encountered|encouraged|encouraging|engaged|enrolled|entered|estimated|evaluated|exacerbated|exacerbating|examined|excellent|excluded|exercising|exhausted|expected|experienced|experiencing|explained|exploring|expressed|factoring|failed|failing|fallen|fatigued|faxed|feeling|felt|filled|fine|finished|finishing|fired|fixed|fluctuated|fluctuating|flushed|focused|followed|following|forcing|forming|found|frustrated|frustrating|functioning|gained|gaining|getting|give|given|giving|going|gone|gotten|graded|great|handling|happened|happening|headed|heading|healed|healing|held|helped|helping|highlighted|hindered|hit|holding|hopes|hospitalized|hurting|identified|imaged|improved|improving|inclined|included|increased|increasing|indicated|informed|initiated|injected|inquiring|inserted|instilled|instructed|interpreted|interrupted|invaded|investigated|involved|involving|jumped|known|lacking|leaking|leaning|learned|learning|leaving|left|lessened|limiting|lingering|listed|loaded|located|looking|losing|lost|made|magnified|maintained|managed|managing|married|measured|meeting|met|missed|missing|moderated|monitored|monitoring|motivated|moved|moving|needed|normalized|noted|noticed|noting|observed|obtained|occas|occurring|offered|omitted|oozing|operating|opposed|opted|ordered|passed|passing|pending|performed|persisted|pine|placed|planing|planned|planning|plannng|pleased|pointed|postponed|prepared|prepped|prescribed|presented|preserved|problems|progressed|Progressing|prolonged|provided|pulled|pushing|put|putting|quit|ran|randomized|ranged|read|readmitted|reassured|recalled|received|receiving|rechecked|recommended|recommending|recounseled|recovered|recovering|recuperating|recurred|reduced|referred|refilled|refused|refusing|regaining|regarding|reinserted|reiterated|rejected|related|relieved|remained|remaining|remembered|reminded|removed|repaired|repeated|replaced|repleted|reported|reporting|requested|required|resolved|resolving|responded|responding|restarted|re-started|resulted|resumed|retaining|retired|retiring|retracted|returned|returning|revealed|reviewed|revised|riding|risen|rising|rremaining|ruled|run|running|sacrificed|said|satisfied|saturated|scheduled|screened|seeing|seen|seing|selected|sending|sent|set|setting|settled|severe|shooting|shown|signficant|sitting|sleeping|slowed|slowing|smoked|smoking|spared|spoken|spotting|squinching|stabilized|standing|stared|started|starting|stated|stayed|staying|stones|stooling|stopped|stopping|straining|struck|subsided|suffering|suggested|suggesting|summarized|supplemented|supposed|suppressed|suspected|suspended|switched|switching|taken|taking|talked|tansitioned|targeted|terminated|thickened|thinking|thought|threatening|thrilled|tied|tingling|tired|told|tolerated|tolerating|transferred|transferring|transitioned|transitioning|treated|treating|trending|trialed|tried|troubled|trying|undergoing|undergone|undertaken|updated|urinating|used|using|vaporized|viewed|visualized|voided|voiding|waiting|waking|washing|watched|watching|weakened|weaning|wearing|well|wetting|wiped|woken|worked|working|worn|worried|worsened|worsening|wrestling|written|show";
	public static final Pattern LINKING_VERBS = Pattern.compile("appear|become|becomes|feels|felt|is|looks|prove|remained|remains|seemed|seems|abandoned|accepted|accepting|accessed|accompanied|achieved|acting|added|adjusted|administered|admitted|advanced|advised|affected|aggravated|aggravating|allowed|ambulating|analysed|answered|anticipated|applied|appreciated|approved|arranged|asked|asking|assessed|associated|attempted|attributed|available|awaiting|awakening|based|battling|becoming|began|beginning|begun|biopsied|bothered|broken|brought|bumped|called|cancelled|cared|carried|catheterized|caused|causing|challenging|changed|changing|characterized|checked|checking|chosen|clamped|cleaned|clear|cleared|clearing|climbed|climbing|clogged|co-existing|combined|come|comes|coming|commenced|compared|complained|complaining|complains|complete|completed|complicated|concerened|concerned|concerning|condylomata|confined|confirmed|confused|considered|considering|constipated|consulted|contacted|contemplating|continue|continued|continues|continuing|contraindicated|contributing|controlled|converted|corrected|counseled|counselled|covered|crept|cured|cut|cutting|dealing|decided|deciding|declined|declining|decreased|decreasing|deemed|deferred|dehydrated|delayed|delivered|demonstrated|denied|depressed|described|describing|desired|detailed|detected|determined|developed|developing|diagnosed|dilated|diminished|discharged|discontinued|discouraged|discussed|disinclined|documented|doing|done|doubled|draining|drawn|dribbling|drinking|dropped|dropping|dying|eating|ejaculated|elected|electing|emanating|emphasized|employed|emptying|encountered|encouraged|encouraging|engaged|enrolled|entered|estimated|evaluated|exacerbated|exacerbating|examined|excellent|excluded|exercising|exhausted|expected|experienced|experiencing|explained|exploring|expressed|factoring|failed|failing|fallen|fatigued|faxed|feeling|felt|filled|fine|finished|finishing|fired|fixed|fluctuated|fluctuating|flushed|focused|followed|following|forcing|forming|found|frustrated|frustrating|functioning|gained|gaining|getting|give|given|giving|going|gone|gotten|graded|great|handling|happened|happening|headed|heading|healed|healing|held|helped|helping|highlighted|hindered|hit|holding|hopes|hospitalized|hurting|identified|imaged|improved|improving|inclined|included|increased|increasing|indicated|informed|initiated|injected|inquiring|inserted|instilled|instructed|interpreted|interrupted|invaded|investigated|involved|involving|jumped|known|lacking|leaking|leaning|learned|learning|leaving|left|lessened|limiting|lingering|listed|loaded|located|looking|losing|lost|made|magnified|maintained|managed|managing|married|measured|meeting|met|missed|missing|moderated|monitored|monitoring|motivated|moved|moving|needed|normalized|noted|noticed|noting|observed|obtained|occas|occurring|offered|omitted|oozing|operating|opposed|opted|ordered|passed|passing|pending|performed|persisted|pine|placed|planing|planned|planning|plannng|pleased|pointed|postponed|prepared|prepped|prescribed|presented|preserved|problems|progressed|Progressing|prolonged|provided|pulled|pushing|put|putting|quit|ran|randomized|ranged|read|readmitted|reassured|recalled|received|receiving|rechecked|recommended|recommending|recounseled|recovered|recovering|recuperating|recurred|reduced|referred|refilled|refused|refusing|regaining|regarding|reinserted|reiterated|rejected|related|relieved|remained|remaining|remembered|reminded|removed|repaired|repeated|replaced|repleted|reported|reporting|requested|required|resolved|resolving|responded|responding|restarted|re-started|resulted|resumed|retaining|retired|retiring|retracted|returned|returning|revealed|reviewed|revised|riding|risen|rising|rremaining|ruled|run|running|sacrificed|said|satisfied|saturated|scheduled|screened|seeing|seen|seing|selected|sending|sent|set|setting|settled|severe|shooting|shown|signficant|sitting|sleeping|slowed|slowing|smoked|smoking|spared|spoken|spotting|squinching|stabilized|standing|stared|started|starting|stated|stayed|staying|stones|stooling|stopped|stopping|straining|struck|subsided|suffering|suggested|suggesting|summarized|supplemented|supposed|suppressed|suspected|suspended|switched|switching|taken|taking|talked|tansitioned|targeted|terminated|thickened|thinking|thought|threatening|thrilled|tied|tingling|tired|told|tolerated|tolerating|transferred|transferring|transitioned|transitioning|treated|treating|trending|trialed|tried|troubled|trying|undergoing|undergone|undertaken|updated|urinating|used|using|vaporized|viewed|visualized|voided|voiding|waiting|waking|washing|watched|watching|weakened|weaning|wearing|well|wetting|wiped|woken|worked|working|worn|worried|worsened|worsening|wrestling|written|show|start", Pattern.CASE_INSENSITIVE);
	
	//public static final String MODAL_AUX_VERB = "(?i)can|could|did|may|must|should|will|would|shall|might";
	public static final Pattern MODAL_AUX_VERB = Pattern.compile("can|could|did|may|must|should|will|would|shall|might", Pattern.CASE_INSENSITIVE);
	
	//public static final String NEGATION = "(?i)no|not|without|none|negative|neither|nor";
	//public static final Pattern NEGATION = Pattern.compile("no|not|without|none|negative|neither|nor|fail|failed", Pattern.CASE_INSENSITIVE);
	public static final Pattern NEGATION = Pattern.compile("no|not|without|none|negative|neither|nor", Pattern.CASE_INSENSITIVE);
	
	//public static final String ARTICLE = "(?i)a|an|the";
	public static final Pattern ARTICLE = Pattern.compile("a|an|the", Pattern.CASE_INSENSITIVE);
	
	public static final Pattern PREPOSITION = Pattern.compile("IN|TO");
	
	//public static final String VERB_SUBJ_SUBJC_EXCLUSIONS = "(?i)a|also|an|and|another|as|be|but|cm|could|elsewhere|has|left|may|mm|otherwise|right|seen|to|which|would";
	public static final Pattern VERB_SUBJ_SUBJC_EXCLUSIONS = Pattern.compile("a|also|an|and|another|as|be|but|cm|could|elsewhere|has|left|may|mm|otherwise|right|seen|to|which|would", Pattern.CASE_INSENSITIVE);
	
	//public static final String PREPOSITIONS = "(?i)after|although|among|as|at|before|between|by|during|for|from|in|of|on|over|per|than|that|to|while|with|within|without|off|since|until";
	public static final Pattern PREPOSITIONS = Pattern.compile("after|although|among|as|at|before|between|by|during|for|from|in|of|on|over|per|than|that|to|while|with|within|without|off|since|until", Pattern.CASE_INSENSITIVE);
	
	//public static final String DEPENDENT_SIGNALS = "(?i)that|when|where|which|who|whom|whose|otherwise|after|also|although|and|as|because|before|certainly|consequently|finally|" +
	//					"first|furthermore|however|if|indeed|later|meanwhile|moreover|nevertheless|or|overall|provided|second|since|so|than|then|therefore|though|though|" +
	//					"thus|unless|until|whence|whenever|whereas|wherever|whether|while|whither|how|what|whatever|whichever|why|whoever|whomever|whosoever|whomsoever";

	//public static final String DEPENDENT_SIGNALS = "(?i)after|also|although|as|because|before|certainly|consequently|finally|first|furthermore|how|however|if|indeed|later|meanwhile|moreover|nevertheless|otherwise|overall|provided|second|since|so|than|that|then|therefore|though|though|thus|unless|until|what|whatever|when|whence|whenever|where|whereas|wherever|whether|which|whichever|while|whither|who|whoever|whom|whomever|whomsoever|whose|whosoever|why";
	public static final Pattern DEPENDENT_SIGNALS = Pattern.compile("after|also|although|as|because|before|certainly|consequently|finally|first|furthermore|how|however|if|indeed|later|meanwhile|moreover|nevertheless|otherwise|overall|provided|second|since|so|than|that|then|therefore|though|though|thus|unless|until|what|whatever|when|whence|whenever|where|whereas|wherever|whether|which|whichever|while|whither|who|whoever|whom|whomever|whomsoever|whose|whosoever|why", Pattern.CASE_INSENSITIVE);
	
	//public static final String CONJUNCTIVE_ADVERBS = "(?i)furthermore|however|moreover|nevertheless|therefore"; // left out "in contrast"
	public static final Pattern CONJUNCTIVE_ADVERBS = Pattern.compile("furthermore|however|moreover|nevertheless|therefore", Pattern.CASE_INSENSITIVE); // left out "in contrast"

	//public static final String INTERSECTION_PREPOSITIONS_AND_DEPENDENT = "(?i)after|as|before|since|than|until"; // since and until are not preps in our list. wtf?
	public static final Pattern INTERSECTION_PREPOSITIONS_AND_DEPENDENT = Pattern.compile("after|as|before|since|than|until", Pattern.CASE_INSENSITIVE); // since and until are not preps in our list. wtf?
	
	private static final String MONGO_DB_HOST = Props.getProperty("mongo_host");
	private static final String MONGO_DB = Props.getProperty("mongo_db");
	
	public enum MongoDB {
	    INSTANCE;
	    
	    private MongoClient mongo;
	    private DB db;

	    MongoDB() {
	    	System.out.println("Established MongoDB connection");
	    	System.out.println(MONGO_DB_HOST + " / " + MONGO_DB + " / " + Props.getProperty("mongo_user") + " / " + Props.getProperty("mongo_pw"));

	        try {
	            mongo = new MongoClient(MONGO_DB_HOST);
	        } catch (UnknownHostException e) {
	            e.printStackTrace();
	        }

	        db = mongo.getDB(MONGO_DB);
	        
	        if(MONGO_DB_HOST.equalsIgnoreCase("mongo01.medicalsearchtechnologies.com")) {
	        	System.out.println("Authenticating to Digital Ocean server...");
				boolean auth = db.authenticate(Props.getProperty("mongo_user"), Props.getProperty("mongo_pw").toCharArray());
				System.out.println("MongoDB auth: " + auth);
	        }
	    }
	    
	    public DB getDB() {
	    	return db;
	    }
	    
	    public DBCollection getCollection(String collection) {
	    	return db.getCollection(collection);
	    }

	    public void close(){
	        mongo.close();
	    }
	}
	
	public enum RedisDBx {
	    INSTANCE;
	    
	    private Jedis jedis;

	    RedisDBx() {
	        try {
	            jedis = new Jedis(MONGO_DB_HOST);
		    	System.out.println("Established Redis connection");
	        } catch(Exception e) {
	            e.printStackTrace();
	        }
	    }
	    
	    public Jedis getInstance() {
	    	return jedis;
	    }

	    public void close(){
	        jedis.close();
	    }
	}

	public enum MyJedisPool {
	    INSTANCE;
	    
	    private JedisPool pool;
	    
	    MyJedisPool() {
	        try {
	        	JedisPoolConfig config = new JedisPoolConfig();
	        	pool = new JedisPool(config, MONGO_DB_HOST);
		    	System.out.println("Established Jedis Pool.");
	        } catch(Exception e) {
	            e.printStackTrace();
	        }
	    }
	    
	    public Jedis getResource() {
	    	return pool.getResource();
	    }

	    public void close(){
	       pool.close();
	    }
	}
	
	public static long getTime() {
		Calendar cal = Calendar.getInstance();
		return cal.getTimeInMillis();
	}
	
	public static String formatTime(double totalSecs) {
		int hours = (int) (totalSecs / 3600);
		int minutes = (int) ((totalSecs % 3600) / 60);
		int seconds = (int) (totalSecs % 60);

		return String.format("%02d:%02d:%02d", hours, minutes, seconds);
	}
}
